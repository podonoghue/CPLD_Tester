/**
 * @file      hardware.cpp (generated from MK20D5.usbdmHardware)
 * @version   1.3.0
 * @brief     Pin initialisation for MK20DX128VLF5
 *
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */

#include "hardware.h"

/**
 * Namespace enclosing USBDM classes
 */
namespace USBDM {

/**
 * @addtogroup USBDM_Group USBDM Peripheral Interface
 * @brief Hardware Peripheral Interface and library
 * @{
 */

/**
 * Startup code for C++ classes
 */
extern "C" void __attribute__((constructor)) cpp_initialise() {
   if constexpr (MapAllPinsOnStartup) {
      mapAllPins();
   }
}

// No user object definitions found

/**
 * Map all configured pins to peripheral signals.
 *
 * PCRs of allocated pins are set according to settings in Configure.usbdmProject
 *
 * @note Only the lower 16-bits of the PCR registers are initialised
 */
void mapAllPins() {
#if false

#warning "PCR Not initialised for PTB0       : Multiple signals mapped to pin - ADC0_SE9[TargetVddSample], GPIOB_0[TargetVddDischarge]/LLWU_P4"
#warning "PCR Not initialised for PTB5       : Multiple signals mapped to pin - GPIOB_5[ClockGpio], TPM1_CH1[ClockChannel]"

#endif


#if defined(PCC_PCCn_CGC_MASK)
   PCC->PCC_PORTA = PCC_PCCn_CGC_MASK;
   PCC->PCC_PORTB = PCC_PCCn_CGC_MASK;
#else
   enablePortClocks(PORTA_CLOCK_MASK|PORTB_CLOCK_MASK);
#endif

   PORTA->GPCLR = ForceLockedPins|0x0100UL|PORT_GPCLR_GPWE(0x0020UL);
   PORTA->GPCLR = ForceLockedPins|0x0200UL|PORT_GPCLR_GPWE(0x0040UL);
   PORTA->GPCLR = ForceLockedPins|0x0300UL|PORT_GPCLR_GPWE(0x0007UL);
   PORTA->GPCLR = ForceLockedPins|0x0400UL|PORT_GPCLR_GPWE(0x0018UL);
   PORTB->GPCLR = ForceLockedPins|0x0100UL|PORT_GPCLR_GPWE(0x0012UL);

   if constexpr (ForceLockoutUnbondedPins) {
      PORTA->GPCLR = PinLock_Locked |0x0000UL|PORT_GPCLR_GPWE(0xFF00UL); // Lockout unavailable pins
      PORTA->GPCHR = PinLock_Locked |0x0000UL|PORT_GPCHR_GPWE(0xFFFFUL); // Lockout unavailable pins
      PORTB->GPCLR = PinLock_Locked |0x0000UL|PORT_GPCLR_GPWE(0xFFC0UL); // Lockout unavailable pins
      PORTB->GPCHR = PinLock_Locked |0x0000UL|PORT_GPCHR_GPWE(0xFFFFUL); // Lockout unavailable pins
   }

}
/**
 * End group USBDM_Group
 * @}
 */
/*
 *  Static objects
 */
   /**
    * Callback to catch unhandled interrupt
    */
   void unhandledCallback() {
      setAndCheckErrorCode(E_NO_HANDLER);
   }
   
   /**
    * Callback to catch unhandled channel interrupt
    *
    * @param mask Mask identifying channel
    */
   void timerUnhandledChannelCallback(uint8_t mask) {
      (void)mask;
      setAndCheckErrorCode(E_NO_HANDLER);
   }

   /**
    * Callback table for programmatically set handlers for Tpm0
    */
   Tpm0Info::ChannelCallbackFunction Tpm0Info::channelCallbacks[] = {

      timerUnhandledChannelCallback,
   };



} // End namespace USBDM

